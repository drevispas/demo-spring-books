server:
  port: 9000

logging:
  level:
    org.springframework.security: trace

spring:
  application:
    name: footballauth
  security:
    oauth2:
      authorizationserver:
        client:
          football:
            registration:
              client-id: "football"
              # {noops} is a password encoder that does nothing that is used to store the client secret in plain text.
              client-secret: "{noop}SuperSecret"
              client-authentication-methods:
                # With "client_secret_post", the client sends the client ID and client secret in the body of POST request.
                - "client_secret_post"
              authorization-grant-types:
               # "client_credentials" is used when the client interacts with users
                - "client_credentials"
              # List of scopes that the client is allowed to request.
              scopes:
                - "football:read"
                - "football:admin"
          football-ui:
            registration:
              client-id: "football-ui"
              client-secret: "{noop}TheSecretSauce"
              client-authentication-methods:
                # "client_secret_basic" sends the client ID and client secret in the Authorization header in the form of "Basic" authentication.
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
                - "client_credentials"
              # URI to redirect to after the user logs in. This should match the redirect URI in the client registration (in footballui).
              redirect-uris:
                - "http://localhost:9080/login/oauth2/code/football-ui"
              scopes:
                - "openid"
                - "profile"
                - "football:read"
                - "football:admin"
            require-authorization-consent: true
    user:
      name: "user"
      password: "{noop}password"
